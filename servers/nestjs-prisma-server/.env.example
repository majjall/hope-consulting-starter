# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings


# Nest
NODE_ENV=development
PORT=3000
API_PATH=api/v1

# Cors
CORS_ENABLED=true

# SWAGGER
SWAGGER_ENABLED=true
SWAGGER_TITLE="Nestjs API Documentation"
SWAGGER_DESCRIPTION="The NestJs API description"
SWAGGER_VERSION='1.0.0'
SWAGGER_PATH=${API_PATH}/docs

# GRAPHQL
GRAPHQL_PLAYGROUND=true
GRAPHQL_DEBUG=true
GRAPHQL_CODE_FIRST_SCHEMA_DESTINATION=./src/schema.graphql
GRAPHQL_SORT_SCHEMA=true



# POSTGRES
POSTGRES_USER=prisma
POSTGRES_PASSWORD=topsecret

DB_NAME=simple
# Nest run locally
DB_HOST=localhost
# Nest run in docker, change host to database container name
# DB_HOST=postgres
DB_PORT=5432
DB_SCHEMA=simple

# Prisma database connection
#DATABASE_URL="postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public"
#DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=${DB_SCHEMA}&sslmode=prefer
DATABASE_URL="file:./dev/${DB_NAME}.db"











# Security
SESSION_SECRET="some-secret"

JWT_PRIVATE_KEY=justanotherprivatekey
JWT_PUBLIC_KEY=notimportant
JWT_ALGORITHM=RS256

JWT_EXPIRE_TIME=7200
# 2h
EXPIRE_IN=7200
# 30 day
REFRESH_IN=2592000



# Email
SMTP_SERVER=smtp.domain.com
SMTP_LOGIN=user@domain.com
SMTP_PASSWORD=password
SMTP_FROM_NAME="NestJS Dev"
SMTP_FROM_EMAIL=user@outlook.com
